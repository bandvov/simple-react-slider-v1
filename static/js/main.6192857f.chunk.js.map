{"version":3,"sources":["index.tsx"],"names":["Slider","auto","width","height","delay","children","showButtons","activeButtonColor","useState","moveTo","setMoveTo","ref","useRef","useEffect","timer","setTimeout","length","clearTimeout","root","position","overflow","slideContainer","display","transform","current","clientWidth","transition","controlButton","margin","color","fontSize","textAlign","controllButtonParent","alignItems","cursor","style","onClick","justifyContent","zIndex","top","left","right","flexWrap","bottom","map","_","index","backgroundColor","App","setWidth","setHeight","controlsNumber","setControlsNumber","setAuto","buttonStyle","padding","marginRight","borderRadius","borderColor","borderWidth","Array","fill","flexDirection","checked","onChange","e","target","type","marginLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6192857f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst Slider: React.FC<{\r\n  auto?: boolean,\r\n  width?: string, \r\n  height?: string,\r\n  showButtons?: boolean,\r\n  delay?: number, \r\n  activeButtonColor?: string, \r\n  children?: React.ReactElement[]\r\n  }>  = ({ auto = true,  width = '100%',height= '100px', delay = 2000, children = [], showButtons = true, activeButtonColor = \"green\" }): React.ReactElement => {\r\n  const [moveTo, setMoveTo] = useState<number>(0);\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (auto){\r\n\r\n      const timer = setTimeout(() => {\r\n        if (moveTo < children.length - 1) {\r\n          setMoveTo(moveTo + 1);\r\n        }else{\r\n          setMoveTo(0);\r\n        }\r\n      }, delay);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [moveTo, auto, delay, children.length]);\r\n\r\n  const root = {\r\n    position:'relative',\r\n    overflow: \"hidden\",\r\n    width: width,\r\n    height: height\r\n  }  as React.CSSProperties;\r\n\r\n  const slideContainer = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    width: `${100 * children.length}%`,\r\n    transform: `translateX(${-moveTo * ref?.current?.clientWidth}px)`,\r\n    transition: \"1s ease-in-out\",\r\n  } as React.CSSProperties;\r\n\r\n  const thumbsContainer = {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n  } as React.CSSProperties;\r\n\r\n  const controlsContainer = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: '100%',\r\n    position: \"absolute\",\r\n    left: 0,\r\n    bottom: 0,\r\n    flexWrap:'wrap',\r\n  } as React.CSSProperties;\r\n\r\n  const controlButton = {\r\n    width: \"16px\",\r\n    height: \"6px\",\r\n    margin: \"0.2rem\",\r\n    color: \"white\",\r\n    fontSize: \"5px\",\r\n    textAlign: \"center\",\r\n  } as React.CSSProperties;\r\nconst controllButtonParent = {\r\n  height:'100%',\r\n  display:'flex',\r\n  alignItems:'center',\r\n  cursor: \"pointer\",\r\n  } as React.CSSProperties\r\n\r\n  return (\r\n    <div ref={ref} style={root}>\r\n      <div\r\n      onClick={()=>{\r\n        if (moveTo<1){\r\n          setMoveTo(children.length-1)\r\n        }else{\r\n          setMoveTo(moveTo - 1)\r\n        }\r\n        }}\r\n      style={{\r\n        cursor:'pointer',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        zIndex:2,\r\n        width:'50px',\r\n        height:'100%',\r\n        position:'absolute',\r\n        top:0,\r\n        left:0,\r\n        color:'white',\r\n        fontSize:'24px',\r\n      }}>&#10094;</div>\r\n      <div \r\n     onClick={()=>{\r\n      if (moveTo>children.length){\r\n        setMoveTo(0)\r\n        }else{\r\n          setMoveTo(moveTo + 1)\r\n        }\r\n      }}\r\n      style={{\r\n        fontSize:'24px',\r\n        cursor:'pointer',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        zIndex:2,\r\n        width:'50px',\r\n        height:'100%',\r\n        position:'absolute',\r\n        top:0,\r\n        right:0,\r\n        color:'white'}}>&#10095;</div>\r\n    \r\n      <div style={slideContainer}>{children}</div>\r\n      <div style={thumbsContainer}>\r\n       {showButtons && <div style={controlsContainer}>\r\n          {children.map((_, index) => {\r\n            return (\r\n              <div key={index} \r\n              style={controllButtonParent}\r\n                onClick={() => {\r\n                  setMoveTo(index);\r\n                }}\r\n                >\r\n              <div\r\n                style={{\r\n                  ...controlButton,\r\n                  backgroundColor: moveTo === index ? activeButtonColor : \"lightgrey\",\r\n                }}\r\n                ></div>\r\n                </div>\r\n            );\r\n          })}\r\n        </div>}\r\n      </div>  \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [width, setWidth] = useState(\"100%\");\r\n  const [height, setHeight] = useState(\"30vw\");\r\n  const [controlsNumber, setControlsNumber] = useState(5);\r\n  const [auto, setAuto] = useState(true);\r\n\r\n  const buttonStyle = {\r\n    backgroundColor: \"transparent\",\r\n    padding: \".5rem\",\r\n    marginRight: \".5rem\",\r\n    width: \"100px\",\r\n    borderRadius: \"4px\",\r\n    borderColor: \"blue\",\r\n    borderWidth: \"1px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"red\",\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"30vw\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          padding: \"0\",\r\n          margin: \"2rem\",\r\n        }}\r\n      >\r\n        <Slider auto={auto} width={width} height={height}>\r\n          {Array(controlsNumber)\r\n            .fill(controlsNumber)\r\n            .map((_, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: index % 2 === 0 ? \"red\" : \"blue\",\r\n                  }}\r\n                ></div>\r\n              );\r\n            })}\r\n        </Slider>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: \"2rem\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div>\r\n          <button style={buttonStyle} onClick={() => setWidth(\"100%\")}>\r\n            width 100%{\" \"}\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => setWidth(\"50vw\")}>\r\n            width 50vw{\" \"}\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => setWidth(\"200px\")}>\r\n            width 200px{\" \"}\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => setWidth(\"500px\")}>\r\n            width 500px{\" \"}\r\n          </button>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <button style={buttonStyle} onClick={() => setHeight(\"100px\")}>\r\n            height 100px{\" \"}\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => setHeight(\"40vh\")}>\r\n            height 40vh{\" \"}\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => setHeight(\"30vw\")}>\r\n            height 30vw{\" \"}\r\n          </button>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <button style={buttonStyle} onClick={() => setControlsNumber(10)}>\r\n            10 items{\" \"}\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => setControlsNumber(20)}>\r\n            20 items{\" \"}\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => setControlsNumber(40)}>\r\n            40 items{\" \"}\r\n          </button>\r\n        </div>\r\n        <hr />\r\n\r\n        <label>\r\n          <input\r\n            style={{ width: \"1rem\", height: \"1rem\" }}\r\n            checked={auto}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              if (e.target.checked) {\r\n                setAuto(true);\r\n              } else {\r\n                setAuto(false);\r\n              }\r\n            }}\r\n            type=\"checkbox\"\r\n          />\r\n          <em\r\n            style={{\r\n              fontSize: \"24px\",\r\n              marginLeft: \"1rem\",\r\n              color: auto ? \"green\" : \"\",\r\n            }}\r\n          >\r\n            Set auto scroll\r\n          </em>\r\n        </label>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n  export default Slider;\r\n\r\n"],"sourceRoot":""}